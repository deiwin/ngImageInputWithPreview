/*! ng-image-input-with-preview v0.0.6 */
!function(a,b){"use strict";!function(){var b=a.module("fileReaderService",[]);b.factory("fileReader",["$q",function(a){var b=function(a,b,c){return function(){c.$apply(function(){b.resolve(a.result)})}},c=function(a,b,c){return function(){c.$apply(function(){b.reject(a.result)})}},d=function(a,d){var e=new FileReader;return e.onload=b(e,a,d),e.onerror=c(e,a,d),e},e=function(b,c){var e=a.defer(),f=d(e,c);return f.readAsDataURL(b),e.promise};return{readAsDataUrl:e}}])}(),function(){var b=a.module("ngImageInputWithPreview",["fileReaderService"]);b.directive("imageWithPreview",["fileReader","$q",function(a,b){var c="image/png,image/jpeg",d="this-is-not-an-image",e=function(a,b){a||(a=c);var d=a.split(",");return d.some(function(a){if(a===b.type)return!0;var c=a.split("/"),d=b.type.split("/");return 2===c.length&&2===d.length&&"*"===c[1]&&c[0]===d[0]})},f=function(){var a=b.defer();return a.resolve(),a.promise};return{restrict:"A",require:"ngModel",scope:{image:"=ngModel",allowedTypes:"@accept",dimensionRestrictions:"&dimensions",sizeRestrictions:"&size"},link:function(c,g,h,i){g.bind("change",function(a){var b=(a.srcElement||a.target).files[0];i.$setViewValue(b,"change")}),i.$parsers.push(function(b){return b?e(c.allowedTypes,b)?{fileReaderPromise:a.readAsDataUrl(b,c)}:d:b}),c.$watch("image",function(a){a&&"string"==typeof a&&(c.image={src:a,isPath:!0})}),i.$validators.image=function(a,b){var c=a||b;return c!==d},i.$asyncValidators.parsing=function(a,c){var d=a||c;return d&&d.fileReaderPromise?(d.fileReaderPromise["finally"](function(){delete d.fileReaderPromise}),d.fileReaderPromise.then(function(a){d.src=a},function(){return b.reject("Failed to parse")})):f()},i.$asyncValidators.dimensions=function(a,d){if(!h.dimensions)return f();var e=a||d;if(!e||!e.fileReaderPromise)return f();var g=b.defer();return e.fileReaderPromise.then(function(a){var b=document.createElement("img");b.addEventListener("load",function(){var a=c.dimensionRestrictions({width:b.width,height:b.height});c.$apply(function(){a?g.resolve():g.reject("Invalid dimensions")})}),b.addEventListener("error",function(){c.$apply(function(){g.reject("Failed to detect dimensions. Not an image!")})}),b.src=a},function(){g.reject("Failed to detect dimensions")}),g.promise},i.$asyncValidators.size=function(a,d){if(!h.size)return f();var e=a||d;if(!e||!e.fileReaderPromise)return f();var g=b.defer();return e.fileReaderPromise.then(function(a){var b=document.createElement("img");b.addEventListener("load",function(){var a=c.sizeRestrictions({size:d.size});c.$apply(function(){a?g.resolve():g.reject("Invalid size")})}),b.addEventListener("error",function(){c.$apply(function(){g.reject("Failed to detect size. Not an image!")})}),b.src=a},function(){g.reject("Failed to detect sieze")}),g.promise}}}}])}()}(window.angular);